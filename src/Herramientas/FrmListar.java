
package Herramientas;

import Clases.clsActivo;
import Seguridad.clsGestor;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author oscar
 */
public class FrmListar extends javax.swing.JInternalFrame {
    
 private clsGestor myGestor;
 
      
    /**
     * Creates new form Frm
     */
    public FrmListar() {
         this.myGestor = new clsGestor();
        initComponents();
          this.CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelListar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tActivos = new javax.swing.JTable();
        lbInformacionFiltrar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        lbBuscar = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnLimpiarBuscador = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Lista de herramientas registrados");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Iconos/list-view-16.0.png"))); // NOI18N

        tActivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N Activo", "Nombre", "Código", "Tipo", "Fragibilidad", "Descripción", "Estado", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tActivos);

        lbInformacionFiltrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbInformacionFiltrar.setText("Ingrese el código de la herramienta.");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        lbBuscar.setText("Buscar:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Iconos/icons8-search-16.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarKeyPressed(evt);
            }
        });

        btnLimpiarBuscador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Iconos/clean-16.png"))); // NOI18N
        btnLimpiarBuscador.setText("Limpiar");
        btnLimpiarBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarBuscadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelListarLayout = new javax.swing.GroupLayout(panelListar);
        panelListar.setLayout(panelListarLayout);
        panelListarLayout.setHorizontalGroup(
            panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(panelListarLayout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addGroup(panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelListarLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(btnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiarBuscador))
                    .addGroup(panelListarLayout.createSequentialGroup()
                        .addComponent(lbBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelListarLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(lbInformacionFiltrar)))
                .addContainerGap(361, Short.MAX_VALUE))
        );
        panelListarLayout.setVerticalGroup(
            panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbInformacionFiltrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiarBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.Buscar();
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.Buscar();
        this.txtBuscar.requestFocus();

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.Buscar();
        }
    }//GEN-LAST:event_btnBuscarKeyPressed

    private void btnLimpiarBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarBuscadorActionPerformed
        this.txtBuscar.setText("");
        this.txtBuscar.requestFocus();
        this.CargarTabla();
    }//GEN-LAST:event_btnLimpiarBuscadorActionPerformed
 
    private void CargarTabla() {
        ArrayList<clsActivo> activos = this.myGestor.ListarActivos();
        String[] columnas = new String[]{
            "Activo",
            "Nombre",
            "Código",
            "Tipo",
            "Fragilidad",
            "Descripción",
            "Estado",
            "Cantidad"
        };

        DefaultTableModel obModelo = new DefaultTableModel(columnas, 0);
        for (clsActivo activo : activos) {
            obModelo.addRow(new Object[]{
                activo.getIdActivo(),
                activo.getCodigo(),
                activo.getNombre(),
                activo.getTipo(),
                activo.getFragilidad(),
                activo.getDescripcion(),
                activo.getCantidad(),
                this.ObtenerEstado(activo.isEstado())
            });
            this.tActivos.setModel(obModelo);
        }
    }
    
    
    private void CargarTabla(ArrayList<clsActivo> activos) {

        String[] columnas = new String[]{
            "Activo",
            "Nombre",
            "Código",
            "Tipo",
            "Fragilidad",
            "Descripción",
            "Cantidad",
            "Estado"
        };

        DefaultTableModel obModel = new DefaultTableModel(columnas, 0);
        for (clsActivo activo : activos) {
            obModel.addRow(new Object[]{
                activo.getIdActivo(),
                activo.getCodigo(),
                activo.getNombre(),
                activo.getTipo(),
                activo.getFragilidad(),
                activo.getDescripcion(),
                activo.getCantidad(),
                this.ObtenerEstado(activo.isEstado())
            });
        }
        this.tActivos.setModel(obModel);
    }
    
        private String ObtenerEstado(boolean estado) {
        if (estado) {
            return "Activo";
        } else {
            return "Inactivo";
        }
    }

       private void Buscar() {

        String valor = this.txtBuscar.getText().trim().toLowerCase();

        if (!valor.isEmpty() && !valor.isBlank()) {

            ArrayList<clsActivo> activos = this.myGestor.ListarActivos();

            if (activos != null && !activos.isEmpty()) {
                List<clsActivo> finales = activos.stream()
                        .filter(activo -> activo.getCodigo().trim().toLowerCase().contains(valor)
                        || activo.getNombre().trim().toLowerCase().contains(valor)
                        || activo.getTipo().trim().toLowerCase().contains(valor)
                        || activo.getDescripcion().trim().toLowerCase().contains(valor)
                        || (activo.getIdActivo() + "").trim().toLowerCase().contains(valor)
                        ).collect(Collectors.toList());

                this.CargarTabla((ArrayList<clsActivo>) finales);
            }
        } else {
            this.CargarTabla();
        }
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnLimpiarBuscador;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBuscar;
    private javax.swing.JLabel lbInformacionFiltrar;
    private javax.swing.JPanel panelListar;
    private javax.swing.JTable tActivos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
